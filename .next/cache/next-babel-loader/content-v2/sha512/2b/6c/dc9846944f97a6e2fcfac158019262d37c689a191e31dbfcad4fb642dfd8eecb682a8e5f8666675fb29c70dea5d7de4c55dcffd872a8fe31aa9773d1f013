{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/jeremie/web/46-izem-site-2021/pages/index.js\";\nimport Prismic from \"prismic-javascript\";\nimport Head from \"next/head\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nexport default function Home(props) {\n  console.log(props);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"SSR styled-components with Next.js Starter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hello, world!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\nexport async function getStaticProps() {\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const data = await Client.query(Prismic.Predicates.at(\"document.type\", \"blog-post\"));\n  const blogPosts = data.results;\n\n  if (!data) {\n    return {\n      notFound: true\n    };\n  }\n\n  return {\n    props: {\n      blogPosts\n    } // will be passed to the page component as props\n\n  };\n}\nconst GlobalStyle = createGlobalStyle`\n h1 {\n   font-size: 4rem;\n }\n`;\nconst Container = styled.div.withConfig({\n  displayName: \"pages__Container\",\n  componentId: \"oiv6qg-0\"\n})([\"text-align:center;\"]);","map":{"version":3,"sources":["/Users/jeremie/web/46-izem-site-2021/pages/index.js"],"names":["Prismic","Head","styled","createGlobalStyle","Home","props","console","log","getStaticProps","apiEndpoint","Client","client","data","query","Predicates","at","blogPosts","results","notFound","GlobalStyle","Container","div"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,oBAApB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,iBAAjB,QAA0C,mBAA1C;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAClCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAA,4BACE,QAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAA,8BACE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAWD;AAED,OAAO,eAAeG,cAAf,GAAgC;AACrC,QAAMC,WAAW,GAAG,8CAApB;AACA,QAAMC,MAAM,GAAGV,OAAO,CAACW,MAAR,CAAeF,WAAf,CAAf;AACA,QAAMG,IAAI,GAAG,MAAMF,MAAM,CAACG,KAAP,CACjBb,OAAO,CAACc,UAAR,CAAmBC,EAAnB,CAAsB,eAAtB,EAAuC,WAAvC,CADiB,CAAnB;AAGA,QAAMC,SAAS,GAAGJ,IAAI,CAACK,OAAvB;;AACA,MAAI,CAACL,IAAL,EAAW;AACT,WAAO;AACLM,MAAAA,QAAQ,EAAE;AADL,KAAP;AAGD;;AACD,SAAO;AACLb,IAAAA,KAAK,EAAE;AAAEW,MAAAA;AAAF,KADF,CACiB;;AADjB,GAAP;AAGD;AAED,MAAMG,WAAW,GAAGhB,iBAAkB;AACtC;AACA;AACA;AACA,CAJA;AAKA,MAAMiB,SAAS,GAAGlB,MAAM,CAACmB,GAAV;AAAA;AAAA;AAAA,0BAAf","sourcesContent":["import Prismic from \"prismic-javascript\";\nimport Head from \"next/head\";\nimport styled, { createGlobalStyle } from \"styled-components\";\n\nexport default function Home(props) {\n  console.log(props);\n  return (\n    <>\n      <Head>\n        <title>SSR styled-components with Next.js Starter</title>\n      </Head>\n      <Container>\n        <GlobalStyle />\n        <h1>Hello, world!</h1>\n      </Container>\n    </>\n  );\n}\n\nexport async function getStaticProps() {\n  const apiEndpoint = \"https://izem-site-2021.cdn.prismic.io/api/v2\";\n  const Client = Prismic.client(apiEndpoint);\n  const data = await Client.query(\n    Prismic.Predicates.at(\"document.type\", \"blog-post\")\n  );\n  const blogPosts = data.results;\n  if (!data) {\n    return {\n      notFound: true,\n    };\n  }\n  return {\n    props: { blogPosts }, // will be passed to the page component as props\n  };\n}\n\nconst GlobalStyle = createGlobalStyle`\n h1 {\n   font-size: 4rem;\n }\n`;\nconst Container = styled.div`\n  text-align: center;\n`;\n"]},"metadata":{},"sourceType":"module"}